version: 2.1
jobs:
  build:
    docker:
      # https://hub.docker.com/r/circleci/node/tags
      - image: circleci/golang:latest-node
    working_directory: ~/workspace
    steps:
      - checkout
      - run:
          command: |
            PR_NUMBER=$(echo "$CIRCLE_PULL_REQUEST" | sed "s/.*\/pull\///")
            echo "PR_NUMBER: $PR_NUMBER"
            echo "export GITHUB_PR_NUMBER=$PR_NUMBER" >> $BASH_ENV

            API_GITHUB="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"
            PR_REQUEST_URL="$API_GITHUB/pulls/$PR_NUMBER"
            PR_RESPONSE=$(curl "$PR_REQUEST_URL")

            PR_TITLE=$(echo $PR_RESPONSE | jq -e '.title' | tr -d '"')
            echo "PR_TITLE: $PR_TITLE"
            echo "export GITHUB_PR_TITLE='$PR_TITLE'" >> $BASH_ENV

            PR_BODY=$(echo $PR_RESPONSE | jq -e '.body' | tr -d '"')
            echo "PR_BODY: $PR_BODY"
            echo "export GITHUB_PR_BODY='$PR_BODY'" >> $BASH_ENV
      - restore_cache:
          key: cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: sudo apt-get update
      - run:
          name: Install packages
          command: sudo apt-get install -y shellcheck
      - run:
          name: Install golang packages
          command: GO111MODULE=on go get mvdan.cc/sh/v3/cmd/shfmt
      - run:
          name: Install Npm packages
          command: yarn
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/workspace/node_modules
            - ~/.cache/yarn/
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: License
          command: yarn check_license
      - run:
          name: Audit
          command: yarn audit
